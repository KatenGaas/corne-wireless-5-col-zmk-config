/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9 8>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14 15>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26 27>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22 20>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34 32>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 0>;
            key-positions = <36 37 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5 14>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17 26>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37 38>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
&none  &mt ESCAPE Q  &kp W           &kp F           &kp P      &kp G                 &kp J               &kp L       &kp U                &kp Y    &kp BACKSPACE  &none
&none  &kp A         &kp R           &kp S           &kp T      &kp D                 &kp H               &kp N       &kp E                &kp I    &kp O          &none
&none  &mt LCTRL Z   &mt LEFT_ALT X  &kp C           &kp V      &kp B                 &kp K               &kp M       &kp COMMA            &kp DOT  &kp ENTER      &none
                                     &kp LEFT_SHIFT  &lt 1 TAB  &mt LCTRL LEFT_GUI    &mt LEFT_ALT SPACE  &lt 2 SEMI  &mt LCTRL RIGHT_ALT
            >;
        };

        numsym_layer {
            bindings = <
&trans  &kp DOLLAR   &kp EXCLAMATION  &kp QUESTION       &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp EQUAL             &kp N7        &kp N8        &kp N9        &kp SLASH    &trans
&trans  &kp AT_SIGN  &kp SQT          &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp UNDERSCORE        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS    &trans
&trans  &kp HASH     &kp PIPE         &kp AMPERSAND      &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp NON_US_BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERCENT  &trans
                                      &trans             &trans                &trans                   &trans                &mo 4         &trans
            >;
        };

        f_arrow_layer {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5          &kp KP_NUMLOCK  &kp PG_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp DELETE       &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10         &kp HOME        &kp LEFT   &kp DOWN      &kp RIGHT      &kp PRINTSCREEN  &trans
&trans  &kp F11  &kp F12  &none   &none   &none           &kp END         &mkp MB1   &none         &none          &kp RMETA        &trans
                          &trans  &mo 3   &kp LEFT_GUI    &trans          &trans     &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &trans          &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset      &none         &none         &none           &none   &trans  &trans  &trans  &trans  &trans
                                      &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        extra_syms_layer {
            bindings = <
&trans  &kp GRAVE   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp ASTERISK  &trans
&trans  &kp TILDE   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp PLUS      &trans
&trans  &kp RSHIFT  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp CARET     &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
